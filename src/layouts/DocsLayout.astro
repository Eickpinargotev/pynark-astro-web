---
export interface Props {
  title: string;
  description?: string;
}

const { title, description = 'Documentación de precios y guía de instalación' } = Astro.props;
---

<!DOCTYPE html>
<html lang="es" class="scroll-smooth dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="theme-color" content="#3b82f6" />
    <link rel="icon" type="image/png" href="/assets/pynark_favicon.png" />
    <title>{title}</title>
  </head>
  <body class="bg-white dark:bg-slate-950 text-slate-900 dark:text-slate-100">
    <!-- Topbar estilo Cursor Docs -->
    <header class="sticky top-0 z-40 border-b border-slate-200/60 dark:border-slate-800/70 bg-white/70 dark:bg-slate-950/70 backdrop-blur">
      <div class="max-w-7xl mx-auto h-14 px-4 sm:px-6 lg:px-8 flex items-center gap-3">
        <button id="sidebar-open" class="lg:hidden p-2 rounded-lg text-slate-600 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-900">
          <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 6h18"/><path d="M3 12h18"/><path d="M3 18h18"/></svg>
        </button>
        <a href="/" class="flex items-center gap-2 pr-2">
          <img src="/assets/pynark_favicon.png" class="w-6 h-6" alt="Pynark" />
          <span class="font-semibold hidden sm:block">Pynark Docs</span>
        </a>
        <div class="flex-1 max-w-[640px]">
          <div class="relative">
            <svg class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-slate-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="11" cy="11" r="8"/><path d="m21 21-4.3-4.3"/></svg>
            <input id="doc-search" placeholder="Buscar…" class="w-full pl-9 pr-3 py-2 rounded-lg bg-slate-50 dark:bg-slate-900 border border-slate-200 dark:border-slate-800 text-sm placeholder:text-slate-400 focus:outline-none focus:ring-2 focus:ring-primary-500/40" />
          </div>
        </div>
        <a href="/pricing" class="hidden md:inline text-sm text-slate-600 dark:text-slate-300 hover:text-primary-600 dark:hover:text-primary-400">Volver a Pricing</a>
        <button id="theme-toggle-docs" class="p-2 rounded-lg text-slate-600 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-900">
          <svg id="icon-moon" class="hidden w-5 h-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M21 12.79A9 9 0 1 1 11.21 3a7 7 0 0 0 9.79 9.79Z"/></svg>
          <svg id="icon-sun" class="hidden w-5 h-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor"><path d="M12 4V2m0 20v-2m8-8h2M2 12h2m13.657-6.343 1.414-1.414M4.929 19.071l1.414-1.414m12.728 0 1.414 1.414M6.343 5.657 4.929 4.243"/><circle cx="12" cy="12" r="4"/></svg>
        </button>
      </div>
    </header>

    <!-- Grid de 3 columnas: sidebar / contenido / ToC -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 grid grid-cols-1 lg:grid-cols-[260px_minmax(0,1fr)_260px] gap-6">
      <!-- Sidebar -->
      <aside id="sidebar" class="fixed inset-y-0 left-0 z-50 w-72 bg-white dark:bg-slate-950 border-r border-slate-200 dark:border-slate-800 p-4 overflow-y-auto transform -translate-x-full transition-transform duration-200 lg:static lg:translate-x-0 lg:w-auto lg:p-0 lg:border-0">
        <nav class="lg:sticky lg:top-24 space-y-6 text-sm">
          <div class="group">
            <button class="w-full flex items-center justify-between text-left text-xs font-semibold text-slate-500 uppercase tracking-wider mb-2">
              <span>Empezar</span>
            </button>
            <ul class="space-y-1 pl-1">
              <li><a class="block px-2 py-1 rounded hover:bg-slate-100 dark:hover:bg-slate-900" href="/docs/Empezar/Instalacion">Instalación</a></li>
            </ul>
          </div>
          <div class="group">
            <button class="w-full flex items-center justify-between text-left text-xs font-semibold text-slate-500 uppercase tracking-wider mb-2">
              <span>Cuenta</span>
            </button>
            <ul class="space-y-1 pl-1">
              <li><a class="block px-2 py-1 rounded hover:bg-slate-100 dark:hover:bg-slate-900" href="/docs/cuenta/pricing">Pricing</a></li>
            </ul>
          </div>
        </nav>
      </aside>

      <!-- Contenido principal -->
      <main class="min-w-0">
        <article id="doc-article" class="prose prose-slate dark:prose-invert max-w-none">
          <slot />
        </article>
      </main>

      <!-- Tabla de contenidos (ToC) -->
      <aside class="hidden xl:block">
        <div class="sticky top-24">
          <div class="text-xs font-semibold text-slate-500 uppercase tracking-wider mb-3">En esta página</div>
          <nav id="toc" class="text-sm space-y-1"></nav>
        </div>
      </aside>
    </div>

    <footer class="py-8 text-center text-sm text-slate-500">
      <p>© 2025 Pynark — Documentación</p>
    </footer>

    <script>
      // @ts-nocheck
      // Sidebar mobile toggle
      const sidebar = document.getElementById('sidebar');
      const openBtn = document.getElementById('sidebar-open');
      openBtn?.addEventListener('click', () => sidebar?.classList.toggle('-translate-x-full'));
      // Close on click outside (mobile)
      document.addEventListener('click', (e) => {
        if (!sidebar) return;
        if (window.innerWidth >= 1024) return;
        const t = e.target;
        const withinSidebar = t instanceof Node ? sidebar.contains(t) : false;
        const clickedOpen = t instanceof Node && openBtn ? openBtn.contains(t) : false;
        if (!withinSidebar && !clickedOpen && !sidebar.classList.contains('-translate-x-full')) {
          sidebar.classList.add('-translate-x-full');
        }
      });

      // Theme toggle (independent from main layout)
      const themeBtn = document.getElementById('theme-toggle-docs');
      const sun = document.getElementById('icon-sun');
      const moon = document.getElementById('icon-moon');
      function reflectThemeIcons() {
        const isDark = document.documentElement.classList.contains('dark');
        if (isDark) { sun?.classList.remove('hidden'); moon?.classList.add('hidden'); }
        else { moon?.classList.remove('hidden'); sun?.classList.add('hidden'); }
      }
      reflectThemeIcons();
      themeBtn?.addEventListener('click', () => {
        const isDark = document.documentElement.classList.toggle('dark');
        localStorage.setItem('color-theme', isDark ? 'dark' : 'light');
        document.documentElement.style.colorScheme = isDark ? 'dark' : 'light';
        reflectThemeIcons();
      });

      // Generate anchors and ToC from article headings (h2, h3)
      const article = document.getElementById('doc-article');
      const toc = document.getElementById('toc');
      /** @type {(text: string) => string} */
      const slugify = (text) => {
        return text
          .toLowerCase()
          .normalize('NFD').replace(/\p{Diacritic}/gu, '')
          .replace(/[^a-z0-9\s-]/g, '')
          .trim()
          .replace(/\s+/g, '-')
          .replace(/-+/g, '-');
      }
      function buildToc() {
        if (!article || !toc) return;
        const headings = Array.from(article.querySelectorAll('h2, h3'));
        toc.innerHTML = '';
        const list = document.createElement('ul');
        list.className = 'space-y-1';
        headings.forEach((h) => {
          if (!h.id) {
            h.id = slugify(h.textContent || '');
          }
          // add anchor icon
          if (!h.querySelector('a.anchor')) {
            const a = document.createElement('a');
            a.href = `#${h.id}`;
            a.className = 'anchor opacity-0 group-hover:opacity-100 ml-2 text-slate-400 hover:text-primary-600';
            a.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" class="inline w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10 13a5 5 0 0 1 7 0l1 1a5 5 0 0 1-7 7l-1-1"/><path d="M14 11a5 5 0 0 1-7 0l-1-1a5 5 0 0 1 7-7l1 1"/></svg>';
            h.classList.add('group');
            h.appendChild(a);
          }
          const li = document.createElement('li');
          const link = document.createElement('a');
          link.href = `#${h.id}`;
          link.textContent = h.textContent || '';
          link.className = `block px-2 py-1 rounded hover:bg-slate-100 dark:hover:bg-slate-900 ${h.tagName === 'H3' ? 'ml-3' : ''}`;
          li.appendChild(link);
          list.appendChild(li);
        });
        toc.appendChild(list);
      }
      buildToc();

      // Scroll spy for ToC
      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          const id = entry.target.getAttribute('id');
          if (!id) return;
          const link = toc?.querySelector(`a[href="#${CSS.escape(id)}"]`);
          if (!link) return;
          if (entry.isIntersecting) {
            toc?.querySelectorAll('a').forEach((a) => a.classList.remove('text-primary-600'));
            link.classList.add('text-primary-600');
          }
        });
      }, { rootMargin: '0px 0px -70% 0px', threshold: [0, 1] });
      document.querySelectorAll('#doc-article h2, #doc-article h3').forEach((h) => observer.observe(h));
    </script>
  </body>
</html>

<style>
  .prose :where(code):not(:where(pre code)) {
    background: rgba(148,163,184,0.15);
    padding: 0.2rem 0.35rem;
    border-radius: 0.375rem;
  }
  .prose :where(h2,h3) {
    scroll-margin-top: 96px;
  }
</style>
